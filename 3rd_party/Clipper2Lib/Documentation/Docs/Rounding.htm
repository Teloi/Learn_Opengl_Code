<html>
<head>
  <title>Rounding</title><script type="text/javascript" src="../CodeScripts/SyntaxHighlighter/scripts/shCore.js"></script><script type="text/javascript" src="../CodeScripts/SyntaxHighlighter/scripts/shBrushDelphi.js"></script><script type="text/javascript" src="../CodeScripts/SyntaxHighlighter/scripts/shBrushCpp.js"></script><script type="text/javascript" src="../CodeScripts/SyntaxHighlighter/scripts/shBrushCSharp.js"></script><link rel="stylesheet" type="text/css" href="../Styles/default.css"/><link rel="stylesheet" type="text/css" href="../Menu/menu.css"/><link rel="stylesheet" type="text/css" href="../CodeScripts/SyntaxHighlighter/styles/shCoreDefault.css"/><link rel="stylesheet" type="text/css" href="../CodeScripts/SyntaxHighlighter/styles/shThemeDefault.css"/><meta name="viewport" content="width=device-width, initial-scale=1.0"><script type="text/javascript" src="../Menu/menu.js"></script><script type="text/javascript" src="../CodeScripts/bootstrap.js"></script>
</head>
<body bgcolor="#FFFFFF" onload="OnLoadEvent()">
  <div class="menu" id="menu" onmouseleave="OnMouseLeaveEvent()"><a class="ancestor" href="_Body.htm">Index</a><a href="./Overview.htm">Overview</a><span class="submenu_owner" onmouseover="onSubmenuPopup(this)"><span class="submenu_heading">Units</span>
      <div class="submenu_background"><a href="./Units/Clipper/_Body.htm">Clipper</a><a href="./Units/Clipper.Core/_Body.htm">Clipper.Core</a><a href="./Units/Clipper.Engine/_Body.htm">Clipper.Engine</a><a href="./Units/Clipper.Export/_Body.htm">Clipper.Export</a><a href="./Units/Clipper.Minkowski/_Body.htm">Clipper.Minkowski</a><a href="./Units/Clipper.Offset/_Body.htm">Clipper.Offset</a><a href="./Units/Clipper.RectClip/_Body.htm">Clipper.RectClip</a>
      </div></span><span class="active">Rounding</span><a href="./USINGZ.htm">USINGZ</a><a href="./FAQ.htm">FAQ</a><a href="./Trigonometry.htm">Trigonometry</a><a class="icon_container" id="icon_container" href="javascript:void(0)" onclick="hamburger()"><img id="menu_icon" src="../Menu/hamburger.svg"></a>
  </div><br><br>

  <h1>Rounding</h1>
  <p> In computational geometry, polygon coordinates are <a href="https://cs.stackexchange.com/q/71657" target="_blank"><b>always</b></a> represented by discrete numbers, whether they be integer or float variables. Consequently, geometric computations won't be reliable (<a href="https://en.wikipedia.org/wiki/Robust_geometric_computation" target="_blank"><b>numerically robust</b></a>) if they're assuming exact coordinates (eg at points of intersection), especially when comparing coordinates.<br><br> The Clipper library <i>is</i> numerically robust because it anticipates and manages coordinate imprecision. Firstly, by using integer variables rather than floats, maximum imprecision is constant. This simplifies differentiating significant from insignificant imprecision. (The imprecision of float values varies and is related to the size of each float value.)<br><br> Not only is the imprecision of integer variables constant, its size relative to polygon size can be adjusted very easily through coordinate scaling. Clipper2 accepts coordinate values anywhere in the range &plusmn;4.6e<sup>&plus;18
    </sup> which accommodates coordinate scaling to very high degrees of precision.<br><br> Finally, because imprecision can bring together coordinates that aren't strictly identical, the library uses additional calculations to check relative positioning.<br><br> Of course problems related to moving <a href="https://en.wikipedia.org/wiki/Real_number" target="_blank"><b>real</b></a> coordinates to <i>discrete</i> ones isn't caused by <b>rounding</b> as the heading implies. But value imprecision is implicit in rounding and Clipper uses rounding internally in all clipping operations.<br><br> </p>
  <h2>Self-intersection artefacts</h2><br>
  <p> Yet despite carefully preserving numerical robustness, there's another problem associated with using discrete numbers. Coordinate imprecision will very occasionally cause the library to return tiny self-intersection artefacts as explained below. <br><br> 
    <h2>Example 1</h2> </p><br>
  <p> In the unscaled image below, the area of intersection of two polygons has been highlighted in bright green.<br><br> <img src="../Images/rounding1.svg" alt=""> <br> When we zoom in on the lowest point of intersection, in Clipper1 we'd find a tiny self-intersecting artefact there. This self-intersection would be present because the polygon wasn't split into two and the orientation of these vertices reversed once rounding was applied. (The three black dots highlight the 'real' unrounded points of intersection, and the red dots show where these three points are located once rounding is applied.). In Clipper2, this polygon is split into two polygons and the polygon with negligible area is discarded. In Clipper2, clipping solutions won't contain polygons where a number of vertices very close together would cause self-intersections.<br> <img src="../Images/rounding2.svg" alt=""><br><br> </p>
  <p>
    <h2>Example 2</h2></p>
  <p> <img src="../Images/rounding4.svg" alt=""><br> In this second example, '<a href="./Units/Clipper/Functions/Union.htm"><b>union</b></a>'ing the polygon above doesn't remove the tiny self-intersection that's there (at least without scaling). Because of rounding these tiny intersections aren't detected. With scaling however (eg &times; 100), this specific self-intersection is detected and tidied into 3 separate polygons. But even with aggressive scaling there can be occasions when tiny self-intersections aren't detected, even though they'd have to be very much smaller relative to their unscaled polygons. Nevertheless these tiny self-intersections aren't likely to cause problems for the library user.<br> </p>
  <h2 id="Auto-SeeAlso">See Also</h2>
  <p class="Body"><a href="Units/Clipper/Functions/Union.htm">Union</a></p>
  <p class="Copyright" id="auto"> <br><br> Copyright &#169; 2010-2023 Angus Johnson &#160; - &#160; Clipper2 1.2.2 &#160; - &#160; Help file built on 26 Mar 2023<br><br> </p>

</body>
</html>
